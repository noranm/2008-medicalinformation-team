PROC DATASETS KILL;QUIT;
OPTION VALIDVARNAME=ANY;
LIBNAME S "C:\NHIS-HEALS";

/** Step 1: 2007년, 2008년 건강검진 받은 대상자 **/
PROC SORT DATA=S.GJ1 OUT=POP NODUPKEY;
BY PERSON_ID HME_DT;
WHERE SUBSTR(HME_DT, 1, 4) IN ('2007' '2008') ;
RUN;

PROC SORT DATA=POP NODUPKEY;
BY PERSON_ID ;
RUN;

/** Step 2: CVD event 생성 **/
PROC SORT DATA=S.gy40 OUT=CVD NODUPKEY;
BY KEY_SEQ;
WHERE (SUBSTR(SICK_SYM, 1, 3) IN ('I20' 'I21' 'I22' 'I23' 'I24' 'I25') OR SUBSTR(SICK_SYM, 1, 2) IN ('I6')) AND SICK_DIV_TYPE_CD^='3';RUN;

PROC SORT DATA=S.gy20 OUT=gy20 NODUPKEY;
BY KEY_SEQ;
WHERE FORM_CD='02' AND VSCN>=2;RUN;

DATA CVD;
MERGE CVD(KEEP=KEY_SEQ IN=IN1) gy20(IN=IN2 KEEP=PERSON_ID RECU_FR_DT KEY_SEQ);
BY KEY_SEQ;
IF IN1 AND IN2;RUN;

PROC SORT DATA=CVD NODUPKEY;BY PERSON_ID RECU_FR_DT;RUN;
PROC SORT DATA=CVD NODUPKEY;BY PERSON_ID ;RUN;

/*** CVD로 인한 사망: 사망원인코드가 I20-I25, I60-I69인 데이터 연결 ***/
DATA DTH CVD_DTH;
SET S.JK (KEEP=PERSON_ID DTH_MDY DTH_CODE1);
IF DTH_MDY^="" THEN OUTPUT DTH;
IF (SUBSTR(DTH_CODE1, 1, 3) IN ('I20' 'I21' 'I22' 'I23' 'I24' 'I25') OR SUBSTR(DTH_CODE1, 1, 2) IN ('I6')) THEN OUTPUT CVD_DTH;
;RUN;

DATA CVD;
MERGE CVD CVD_DTH(KEEP=PERSON_ID DTH_MDY);
BY PERSON_ID;
FORMAT CVD_DT YYMMDD10.;
CVD_DT = MIN(INPUT(RECU_FR_DT, YYMMDD10.), INPUT(DTH_MDY, YYMMDD10.));
RUN;

/** Step 2: Bleeding outcome생성 **/
PROC SORT DATA=S.gy40 OUT=Bleeding NODUPKEY;
BY KEY_SEQ;
WHERE SUBSTR(SICK_SYM, 1, 4) IN ('K226' 'K250' 'K252' 'K254' 'K256' 'K260' 'K262'
 'K264' 'K266' 'K270' 'K272' 'K274' 'K276' 'K280' 'K282' 'K284' 'K286' 'K290' 'K625' 'K920' 'K921' 'K922' ) AND SICK_DIV_TYPE_CD^='3';RUN;

PROC SORT DATA=S.gy30 OUT=TRANSFUSION NODUPKEY;
BY KEY_SEQ;
WHERE SUBSTR(DIV_CD, 1, 5) IN ('X1001' 'X1002' 'X2011' 'X2012' 'X2021' 'X2022' 'X2031' 'X2032' 'X2041' 'X2061' 'X2062');
;RUN;

PROC SORT DATA=S.gy20 OUT=ADMISSION NODUPKEY;
BY KEY_SEQ;
WHERE FORM_CD='02' ;RUN;

DATA Bleeding;
MERGE Bleeding(KEEP=KEY_SEQ IN=IN1) TRANSFUSION(KEEP=KEY_SEQ IN=IN2) ADMISSION(IN=IN3 KEEP=PERSON_ID RECU_FR_DT KEY_SEQ);
BY KEY_SEQ;
IF IN1 AND IN2 AND IN3;RUN;

PROC SORT DATA=Bleeding NODUPKEY;BY PERSON_ID RECU_FR_DT;RUN;
PROC SORT DATA=Bleeding NODUPKEY;BY PERSON_ID ;RUN;

DATA Bleeding;
SET Bleeding;
FORMAT Bleeding_DT YYMMDD10.;
Bleeding_DT = INPUT(RECU_FR_DT, YYMMDD10.);
RUN;

/** Step 2: Aspirin 복용력 생성 **/
PROC SORT DATA=S.gy30(KEEP=KEY_SEQ GNL_NM_CD) OUT=Aspirin1 NODUPKEY;
BY KEY_SEQ;
WHERE GNL_NM_CD in ("110902BIJ" "110702ATB" "110701ATB" "110802ATB" "110801ATB" "111001ATE" "111002ATE" "111001ACE" "111003ACE" "111003ATE" "111001ATB" 
"517900ACE" "517900ACH" "517900ATE" "489700ACR")
;RUN;

PROC SORT DATA=S.gy60(KEEP=KEY_SEQ GNL_NM_CD) OUT=Aspirin2 NODUPKEY;
BY KEY_SEQ;
WHERE GNL_NM_CD in ("110902BIJ" "110702ATB" "110701ATB" "110802ATB" "110801ATB" "111001ATE" "111002ATE" "111001ACE" "111003ACE" "111003ATE" "111001ATB" 
"517900ACE" "517900ACH" "517900ATE" "489700ACR")
;RUN;

DATA Aspirin;
MERGE Aspirin1 Aspirin2;
BY KEY_SEQ;RUN;

PROC SORT DATA=S.gy20 OUT=gy20 NODUPKEY;
BY KEY_SEQ;
RUN;

DATA Aspirin;
MERGE Aspirin(KEEP=KEY_SEQ IN=IN1) gy20(IN=IN2 KEEP=PERSON_ID RECU_FR_DT KEY_SEQ);
BY KEY_SEQ;
IF IN1 AND IN2 ;RUN;

PROC SORT DATA=Aspirin NODUPKEY;BY PERSON_ID RECU_FR_DT;RUN;
PROC SORT DATA=Aspirin NODUPKEY;BY PERSON_ID ;RUN;

DATA Aspirin;
SET Aspirin;
FORMAT Aspirin_DT YYMMDD10.;
Aspirin_DT = INPUT(RECU_FR_DT, YYMMDD10.);
RUN;

/** 2002-2007년 사이에 CVD event가 발생한 환자는 제외 **/
DATA POP;
MERGE POP (IN=IN1 KEEP=PERSON_ID HME_DT BMI TOT_CHOLE SMK_STAT_TYPE_RSPS_CD DRNK_HABIT_RSPS_CD EXERCI_FREQ_RSPS_CD) CVD (KEEP=PERSON_ID CVD_DT);
BY PERSON_ID;
IF IN1;
IF .< CVD_DT <=INPUT(HME_DT, YYMMDD10.) THEN DELETE; RUN;

/** 2002-2007년 사이에 Bleeding event가 발생한 환자는 제외 **/
DATA POP;
MERGE POP(IN=IN1) Bleeding(KEEP=PERSON_ID Bleeding_DT);
BY PERSON_ID;
IF IN1;
IF .< Bleeding_DT <=INPUT(HME_DT, YYMMDD10.) THEN DELETE;RUN;

/** 2002-2007년 사이에 Aspirin 복용력 환자는 제외 **/
DATA POP;
MERGE POP(IN=IN1) Aspirin(KEEP=PERSON_ID Aspirin_DT);
BY PERSON_ID;
IF IN1;
IF .< Aspirin_DT <=INPUT(HME_DT, YYMMDD10.) THEN DELETE;RUN;

DATA POP;
SET POP;
CVD= (CVD_DT^=.);
Bleeding= (Bleeding_DT^=.);
Aspirin= (Aspirin_DT^=.);
RUN;

PROC FREQ DATA=POP;
TABLES CVD Bleeding Aspirin;RUN;

PROC FREQ DATA=POP;
TABLES SMK_STAT_TYPE_RSPS_CD DRNK_HABIT_RSPS_CD EXERCI_FREQ_RSPS_CD; RUN;

/** 사망일 연결하기  **/
DATA POP;
MERGE POP(IN=IN1) DTH(KEEP=PERSON_ID DTH_MDY);
BY PERSON_ID;
IF IN1;
RUN;

/** Fu date 만들기 **/
DATA POP;
SET POP;
FORMAT INDEX_DT FUDT  YYMMDD10.;
INDEX_DT= INPUT(HME_DT, YYMMDD10.);
IF CVD=1 THEN FUDT=CVD_DT;
IF CVD=0 THEN FUDT=MIN(INPUT(DTH_MDY, YYMMDD10.), '31DEC2013'D);
RUN; 

PROC SORT DATA=S.JK OUT=Demographic NODUPKEY;
BY PERSON_ID AGE ; 
WHERE STND_Y in ("2007" "2008") ; RUN;

/** Demographic **/
PROC SORT DATA=Demographic (KEEP = PERSON_ID AGE SEX CTRB_PT_TYPE_CD) NODUPKEY;
BY PERSON_ID ; RUN;

DATA POP2;
MERGE POP (IN=IN1) Demographic;
BY PERSON_ID;
IF IN1;
RUN; 

/********CCI ******/
/** Myocardial infarction **/
PROC SORT DATA=S.gy40  OUT=MI(KEEP=KEY_SEQ) NODUPKEY;
BY KEY_SEQ;
WHERE (SUBSTR(SICK_SYM, 1, 3) IN ("I21" "I22") OR SUBSTR(SICK_SYM, 1, 4) IN ("I252")) AND SICK_DIV_TYPE_CD^="3" ;
RUN;

PROC SORT DATA=S.gy40   OUT=CHF(KEEP=KEY_SEQ) NODUPKEY ;
BY KEY_SEQ;
WHERE (SUBSTR(SICK_SYM, 1, 3) IN ("I43" "I50") OR SUBSTR(SICK_SYM, 1, 4) IN ("I099" "I110" "I130" "I132" "I255" "I420" "I425" "I426" "I427" "I428" "I429" "P290")) 
AND SICK_DIV_TYPE_CD^="3" ;
RUN;

PROC SORT DATA=S.gy40   OUT=PVD(KEEP=KEY_SEQ) NODUPKEY ;
BY KEY_SEQ;
WHERE (SUBSTR(SICK_SYM, 1, 3) IN ("I70" "I71") OR
SUBSTR(SICK_SYM, 1, 4) IN ("I731" "I738" "I739" "I771" "I790" "I792" "K551" "K558" "K559" "Z958" "Z959" ) ) 
AND SICK_DIV_TYPE_CD^="3" ;
RUN;

PROC SORT DATA=S.gy40   OUT=CVD(KEEP=KEY_SEQ) NODUPKEY ;
BY KEY_SEQ;
WHERE (SUBSTR(SICK_SYM, 1, 3) IN ("G45" "G46") OR SUBSTR(SICK_SYM, 1, 2) IN ("I6") OR SUBSTR(SICK_SYM, 1, 4) IN ("H340")) 
AND SICK_DIV_TYPE_CD^="3" ;
RUN;

PROC SORT DATA=S.gy40   OUT=DEMENTIA(KEEP=KEY_SEQ) NODUPKEY ;
BY KEY_SEQ;
WHERE (SUBSTR(SICK_SYM, 1, 3) IN ("F00" "F01" "F02" "F03" "G30" ) OR SUBSTR(SICK_SYM, 1, 4) IN ("F051" "G311")) 
AND SICK_DIV_TYPE_CD^="3" ;
RUN;

PROC SORT DATA=S.gy40   OUT=CPD(KEEP=KEY_SEQ) NODUPKEY ;
BY KEY_SEQ;
WHERE (SUBSTR(SICK_SYM, 1, 3) IN ("J40" "J41" "J42" "J43" "J44" "J45" "J46" "J47" "J60" "J61" "J62" "J63" "J64" "J65" "J66" "J67" ) OR 
SUBSTR(SICK_SYM, 1, 4) IN ("I278" "I279" "J684" "J701" "J703")) 
AND SICK_DIV_TYPE_CD^="3" ;
RUN; 

PROC SORT DATA=S.gy40   OUT=RH(KEEP=KEY_SEQ) NODUPKEY ;
BY KEY_SEQ;
WHERE (SUBSTR(SICK_SYM, 1, 3) IN ("M05" "M06" "M32" "M33" "M34") OR  SUBSTR(SICK_SYM, 1, 4) IN ("M315" "M351" "M353" "M360" ) ) 
AND SICK_DIV_TYPE_CD^="3" ;
RUN; 

PROC SORT DATA=S.gy40   OUT=PUD(KEEP=KEY_SEQ) NODUPKEY ;
BY KEY_SEQ;
WHERE (SUBSTR(SICK_SYM, 1, 3) IN ("K25" "K26" "K27" "K28") ) AND SICK_DIV_TYPE_CD^="3" ;
RUN; 

PROC SORT DATA=S.gy40   OUT=MLD(KEEP=KEY_SEQ) NODUPKEY ;
BY KEY_SEQ;
WHERE (SUBSTR(SICK_SYM, 1, 3) IN ("B18" "K73" "K74") OR
SUBSTR(SICK_SYM, 1, 4) IN ("K700" "K701" "K702" "K703" "K709" "K713" "K714" "K715" "K717" "K760" "K762" "K763" "K764" "K768" "K769" "Z944" )) AND SICK_DIV_TYPE_CD^="3" ; 
RUN;

PROC SORT DATA=S.gy40   OUT=DM1(KEEP=KEY_SEQ) NODUPKEY ;
BY KEY_SEQ;
WHERE SUBSTR(SICK_SYM, 1, 4) IN ("E100" "E101" "E106" "E108" "E109" "E110" "E111" "E116" "E118" "E119" 
"E120" "E121" "E126" "E128" "E129" "E130" "E131" "E136" "E138" "E139" "E140" "E141" "E146" "E148" "E149") AND SICK_DIV_TYPE_CD^="3" ; 
RUN;

PROC SORT DATA=S.gy40   OUT=DM2(KEEP=KEY_SEQ) NODUPKEY ;
BY KEY_SEQ;
WHERE SUBSTR(SICK_SYM, 1, 4) IN ("E102" "E103" "E104" "E105" "E107" "E112" "E113" "E114" "E115" "E117" 
"E122" "E123" "E124" "E125" "E127" "E132" "E133" "E134" "E135" "E137" "E142" "E143" "E144" "E145" "E147") AND SICK_DIV_TYPE_CD^="3" ; 
RUN;

PROC SORT DATA=S.gy40   OUT=HP(KEEP=KEY_SEQ) NODUPKEY ;
BY KEY_SEQ;
WHERE (SUBSTR(SICK_SYM, 1, 3) IN ("G81" "G82") OR
SUBSTR(SICK_SYM, 1, 4) IN ("G041" "G114" "G801" "G802" "G830" "G831" "G832" "G833" "G834" "G839") ) AND SICK_DIV_TYPE_CD^="3" ; 
RUN;

PROC SORT DATA=S.gy40   OUT=RENAL(KEEP=KEY_SEQ) NODUPKEY ;
BY KEY_SEQ;
WHERE  (SUBSTR(SICK_SYM, 1, 3) IN ("N18" "N19") OR
SUBSTR(SICK_SYM, 1, 4) IN ("I120" "I131" "N032" "N033" "N034" "N035" "N036" "N037" "N052" "N052"
"N053" "N054" "N055" "N056" "N057" "N250" "Z490" "Z491" "Z492" "Z940" "Z992")) AND SICK_DIV_TYPE_CD^="3" ; 
RUN;

PROC SORT DATA=S.gy40   OUT=CANCER(KEEP=KEY_SEQ) NODUPKEY ;
BY KEY_SEQ;
WHERE (SUBSTR(SICK_SYM, 1, 2) IN ("C0" "C1") OR
SUBSTR(SICK_SYM, 1, 3) IN ("C20" "C21" "C22" "C23" "C24" "C25" "C26" "C30" "C31" "C32" "C33" "C34"
"C37" "C38" "C39" "C40" "C41" "C43" "C45" "C46" "C47" "C48" "C49" 
"C50" "C51" "C52" "C53" "C54" "C55" "C56" "C57" "C58"
"C60" "C61" "C62" "C63" "C64" "C65" "C66" "C67" "C68" "C69"
"C70" "C71" "C72" "C73" "C74" "C75" "C76" 
"C81" "C82" "C83" "C84" "C85" "C88"
"C90" "C91" "C92" "C93" "C94" "C95" "C96" "C97" )) AND SICK_DIV_TYPE_CD^="3" ; 
RUN;

PROC SORT DATA=S.gy40   OUT=MSLD(KEEP=KEY_SEQ) NODUPKEY ;
BY KEY_SEQ;
WHERE SUBSTR(SICK_SYM, 1, 4) IN ("I850" "I859" "I864" "I982" "K704" "K711" "K721" "K729" "K765" "K766" "K767") AND SICK_DIV_TYPE_CD^="3" ; 
RUN;

PROC SORT DATA=S.gy40   OUT=METASTATIC(KEEP=KEY_SEQ) NODUPKEY ;
BY KEY_SEQ;
WHERE SUBSTR(SICK_SYM, 1, 3) IN ("C77" "C78" "C79" "C80")  AND SICK_DIV_TYPE_CD^="3" ; 
RUN;

PROC SORT DATA=S.gy40   OUT=AIDS(KEEP=KEY_SEQ) NODUPKEY ;
BY KEY_SEQ;
WHERE 
SUBSTR(SICK_SYM, 1, 3) IN ("B20" "B21" "B22" "B24") AND SICK_DIV_TYPE_CD^="3" ; 
RUN;

%MACRO CCI(DZ);
PROC  SQL UNDO_POLICY=NONE;
CREATE TABLE &DZ AS SELECT A.PERSON_ID, A.RECU_FR_DT
FROM S.gy20  AS A , &DZ AS B 
WHERE A.KEY_SEQ=B.KEY_SEQ  ;
QUIT;

PROC SORT DATA=&DZ;BY PERSON_ID RECU_FR_DT;RUN;
DATA &DZ;
MERGE &DZ(IN=IN1) POP(IN=IN2 KEEP=PERSON_ID INDEX_DT);
BY PERSON_ID;
IF IN1 AND IN2;
IF 0=<ABS( INDEX_DT -INPUT(RECU_FR_DT, YYMMDD10.)) <=365;
RUN;
PROC SORT DATA=&DZ(KEEP=PERSON_ID) NODUPKEY;BY PERSON_ID;RUN;
%MEND;

%CCI(MI);
%CCI(CHF);
%CCI(PVD);
%CCI(CVD);
%CCI(DEMENTIA);
%CCI(CPD);
%CCI(RH);
%CCI(PUD);
%CCI(MLD);
%CCI(DM1);
%CCI(DM2);
%CCI(HP);
%CCI(RENAL);
%CCI(CANCER);
%CCI(MSLD);
%CCI(METASTATIC);
%CCI(AIDS);

DATA S.POP;
MERGE POP2(IN=IN1) MI(IN=IN2) CHF(IN=IN3) PVD(IN=IN4) CVD(IN=IN5) DEMENTIA(IN=IN6)
CPD(IN=IN7) RH(IN=IN8) PUD(IN=IN9) MLD(IN=IN10) DM1(IN=IN11) DM2(IN=IN12) HP(IN=IN13)
RENAL(IN=IN14) CANCER(IN=IN15) MSLD(IN=IN16) METASTATIC(IN=IN17) AIDS(IN=IN18) ;;
BY PERSON_ID;
IF IN1;
CCI_orig=SUM(IN2*1) + SUM(IN3*1) + SUM(IN4*1) + SUM(IN5*1) + SUM(IN6*1) + SUM(IN7*1) + SUM(IN8*1) + 
SUM(IN9*1) + SUM(IN10*1) + SUM(IN11*1) + SUM(IN12*2) + SUM(IN13*2) + SUM(IN14*2) + SUM(IN15*2) +
SUM(IN16*3) + SUM(IN17*6) + SUM(IN18*6);
RUN;
