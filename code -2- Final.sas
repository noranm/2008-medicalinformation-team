/** History of Hypertension **/
PROC SORT DATA=S.gy40   OUT=HTN(KEEP=KEY_SEQ) NODUPKEY ;
BY KEY_SEQ;
WHERE SUBSTR(SICK_SYM, 1, 3) IN ("I10" "I11" "I12" "I13" "I15") AND SICK_DIV_TYPE_CD^="3" ; 
RUN;

DATA HTN_adm (DROP=RECU_FR_DT);
MERGE HTN(KEEP=KEY_SEQ IN=IN1) ADMISSION(IN=IN2 KEEP=PERSON_ID RECU_FR_DT KEY_SEQ);
BY KEY_SEQ;
ADM_DT = RECU_FR_DT;
IF IN1 AND IN2 ;RUN;

PROC SORT DATA=HTN_adm NODUPKEY;BY PERSON_ID ADM_DT ;RUN;
PROC SORT DATA=HTN_adm NODUPKEY;BY PERSON_ID ;RUN;

PROC SORT DATA=S.gy20 OUT=Outpatient NODUPKEY;
BY KEY_SEQ;
WHERE FORM_CD='03' ;RUN;

DATA HTN_out (DROP=RECU_FR_DT);
MERGE HTN(KEEP=KEY_SEQ IN=IN1) Outpatient(IN=IN2 KEEP=PERSON_ID RECU_FR_DT KEY_SEQ);
BY KEY_SEQ;
OUT_DT = RECU_FR_DT;
IF IN1 AND IN2 ; RUN;

PROC SORT DATA=HTN_out NODUPKEY;BY PERSON_ID OUT_DT;RUN;
PROC SORT DATA=HTN_out OUT=HTN_out2 (KEEP = KEY_SEQ) NODUPKEY;BY PERSON_ID ;RUN;

PROC SORT DATA=HTN_out NODUPKEY;BY KEY_SEQ; RUN;
PROC SORT DATA=HTN_out2 NODUPKEY;BY KEY_SEQ; RUN;

DATA HTN_out3;
MERGE HTN_out(KEEP=KEY_SEQ PERSON_ID OUT_DT IN=IN1) HTN_out2 (IN=IN2);
BY KEY_SEQ;
IF IN1 AND IN2^=1;
RUN; * 265,565 - 5,229 = 259,336 ;

/* 외래 진료 첫 발생을 제외한 정렬 --> 두 번째 발생 */
PROC SORT DATA=HTN_out3 NODUPKEY;BY PERSON_ID OUT_DT;RUN;
PROC SORT DATA=HTN_out3 NODUPKEY;BY PERSON_ID ;RUN;

DATA History_HTN (KEEP = PERSON_ID HTN_DT);
MERGE HTN_adm HTN_out3;
FORMAT HTN_DT YYMMDD10. ;
HTN_DT = min( INPUT(ADM_DT,YYMMDD10.), INPUT(OUT_DT, YYMMDD10.));
RUN;

PROC SORT DATA=history_HTN NODUPKEY;BY PERSON_ID ;RUN;

/** History of Diabetes mellitus **/
PROC SORT DATA=S.gy40  OUT=DM(KEEP=KEY_SEQ) NODUPKEY ;
BY KEY_SEQ;
WHERE SUBSTR(SICK_SYM, 1, 3) IN ("E11" "E12" "E13" "E14") AND SICK_DIV_TYPE_CD^="3" ; 
RUN;

DATA DM_adm (DROP=RECU_FR_DT);
MERGE DM(KEEP=KEY_SEQ IN=IN1) ADMISSION(IN=IN2 KEEP=PERSON_ID RECU_FR_DT KEY_SEQ);
BY KEY_SEQ;
ADM_DT = RECU_FR_DT;
IF IN1 AND IN2 ;RUN;

PROC SORT DATA=DM_adm NODUPKEY;BY PERSON_ID ADM_DT ;RUN;
PROC SORT DATA=DM_adm NODUPKEY;BY PERSON_ID ;RUN;

DATA DM_out (DROP=RECU_FR_DT);
MERGE DM(KEEP=KEY_SEQ IN=IN1) Outpatient(IN=IN2 KEEP=PERSON_ID RECU_FR_DT KEY_SEQ);
BY KEY_SEQ;
OUT_DT = RECU_FR_DT;
IF IN1 AND IN2 ; RUN;

PROC SORT DATA=DM_out NODUPKEY;BY PERSON_ID OUT_DT;RUN;
PROC SORT DATA=DM_out OUT=DM_out2 (KEEP = KEY_SEQ) NODUPKEY;BY PERSON_ID ;RUN;

PROC SORT DATA=DM_out NODUPKEY;BY KEY_SEQ; RUN;
PROC SORT DATA=DM_out2 NODUPKEY;BY KEY_SEQ; RUN;

DATA DM_out3;
MERGE DM_out(KEEP=KEY_SEQ PERSON_ID OUT_DT IN=IN1) DM_out2 (IN=IN2);
BY KEY_SEQ;
IF IN1 AND IN2^=1;
RUN; * 115,888 - 3,934 = 111,954;

/* 외래 진료 첫 발생을 제외한 정렬 --> 두 번째 발생 */
PROC SORT DATA=DM_out3 NODUPKEY;BY PERSON_ID OUT_DT;RUN;
PROC SORT DATA=DM_out3 NODUPKEY;BY PERSON_ID ;RUN;

DATA History_DM (KEEP = PERSON_ID DM_DT);
MERGE DM_adm DM_out3;
FORMAT DM_DT YYMMDD10. ;
DM_DT = min( INPUT(ADM_DT,YYMMDD10.), INPUT(OUT_DT, YYMMDD10.));
RUN;

PROC SORT DATA=History_DM NODUPKEY;BY PERSON_ID ;RUN;

/** History of Dyslipidemia**/
PROC SORT DATA=S.gy40   OUT=DL(KEEP=KEY_SEQ) NODUPKEY ;
BY KEY_SEQ;
WHERE SUBSTR(SICK_SYM, 1, 3) IN ("E78") AND SICK_DIV_TYPE_CD^="3" ; 
RUN;

PROC SORT DATA=S.gy20 OUT=Once NODUPKEY;
BY KEY_SEQ;
WHERE FORM_CD in ("03" "02"); RUN;

DATA DL_once ;
MERGE DL(KEEP=KEY_SEQ IN=IN1) Once(IN=IN2 KEEP=PERSON_ID RECU_FR_DT KEY_SEQ);
BY KEY_SEQ;
IF IN1 AND IN2 ;RUN;

PROC SORT DATA=DL_once NODUPKEY;BY PERSON_ID RECU_FR_DT ;RUN;
PROC SORT DATA=DL_once NODUPKEY;BY PERSON_ID ;RUN;

DATA History_DL (KEEP = PERSON_ID DL_DT);
SET DL_once ;
FORMAT DL_DT YYMMDD10. ;
DL_DT = INPUT(RECU_FR_DT,YYMMDD10.);
RUN;

PROC SORT DATA=history_DL NODUPKEY;BY PERSON_ID ;RUN;

DATA History (DROP = HTN_DT DM_DT DL_DT) ;
MERGE S.POP(IN=IN1) History_HTN History_DM History_DL; BY PERSON_ID; IF IN1; 
IF .< HTN_DT <=INPUT(HME_DT, YYMMDD10.) THEN HTN = 1 ;
IF .< DM_DT <=INPUT(HME_DT, YYMMDD10.) THEN DM = 1 ;
IF .< DL_DT <=INPUT(HME_DT, YYMMDD10.) THEN DL = 1 ;
RUN;

DATA History;
SET History;
IF HTN ='.' THEN HTN=0;
IF DM ='.' THEN DM=0;
IF DL ='.' THEN DL=0; RUN;

/** 3단계: CVD event 발생까지의 걸린 시간 변수 생성 **/
DATA S.SURV2 (KEEP=PERSON_ID INDEX_DT Aspirin_DT CVD_DT FUDT START STOP Aspirin Aspirin1 CVD CVD1 CCI_ORIG SEX AGE CTRB_PT_TYPE_CD  BMI TOT_CHOLE SMK_STAT_TYPE_RSPS_CD DRNK_HABIT_RSPS_CD EXERCI_FREQ_RSPS_CD HTN DM DL);
SET History;
IF Aspirin=1 AND Aspirin_DT<CVD_DT THEN DO;
START=0; STOP=Aspirin_DT - INDEX_DT; Aspirin1=0; CVD1=0;OUTPUT;
START=Aspirin_DT - INDEX_DT; STOP=FUDT - INDEX_DT; Aspirin1=1; CVD1=CVD;OUTPUT;
END;

IF Aspirin=1 AND .<CVD_DT=<Aspirin_DT THEN DO;
START=0; STOP=CVD_DT - INDEX_DT; Aspirin1=0; CVD1=1;OUTPUT;
END;

IF Aspirin=1 AND CVD=0 THEN DO;
START=0; STOP=Aspirin_DT - INDEX_DT; Aspirin1=0; CVD1=0;OUTPUT;
START=Aspirin_DT - INDEX_DT; STOP=FUDT - INDEX_DT; Aspirin1=1; CVD1=0;OUTPUT;
END;

IF Aspirin=0 THEN DO;
START=0; STOP=FUDT - INDEX_DT; Aspirin1=0; CVD1=CVD;OUTPUT;
END;
RUN;
